{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipints","isMyMessage","people","map","person","index","last_read","renderMessage","Object","keys","key","lastMessagekey","width","marginRight","title","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDom","render","document","getElementById"],"mappings":"gNAoDeA,EAhDK,SAACC,GACjB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACOC,EAAiBJ,EAAjBI,OAAQC,EAASL,EAATK,MAETC,EAAe,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAOP,EAAMQ,OAEhBD,EAAKE,OAAS,GAAIC,YAAYP,EAAOD,EAAQ,CAACK,SACjDN,EAAS,KAYb,OACI,uBAAMU,UAAU,eAAeC,SAAUR,EAAzC,UACI,uBACIO,UAAU,gBACVE,YAAY,oBACZb,MAAOA,EACPc,SAhBS,SAACT,GAClBJ,EAASI,EAAMU,OAAOf,OAEtBgB,YAASlB,EAAOI,IAcRU,SAAUR,IAEd,uBAAOa,QAAQ,gBAAf,SACI,sBAAMN,UAAU,eAAhB,SACI,cAACO,EAAA,EAAD,CAAiBP,UAAU,qBAGnC,uBACIQ,KAAK,OACLC,UAAU,EACVC,GAAG,gBACHC,MAAO,CAACC,QAAQ,QAChBT,SAvBS,SAACT,GAClBK,YAAYP,EAAOD,EAAQ,CAAEsB,MAAOnB,EAAMU,OAAOS,MAAOjB,KAAK,QAwBzD,wBAAQY,KAAK,SAASR,UAAU,cAAhC,SACI,cAACc,EAAA,EAAD,CAAcd,UAAU,oBC9BzBe,EAjBG,SAAC,GAAe,IAAD,EAAbC,EAAa,EAAbA,QAChB,OAAU,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAAUC,mBAAV,eAAyBnB,QAAQ,EAE5B,qBACIoB,IAAKF,EAAQC,YAAY,GAAGE,KAC5BC,IAAI,qBACJpB,UAAU,gBACVW,MAAO,CAAEU,MAAO,WAKxB,qBAAKrB,UAAU,UAAUW,MAAO,CAACU,MAAO,QAASC,MAAM,QAASC,gBAAgB,WAAhF,SACKP,EAAQpB,QCcN4B,EA3BM,SAAC,GAA4B,IAAD,IAA1BC,EAA0B,EAA1BA,YAAaT,EAAa,EAAbA,QAC1BU,GAAwBD,GAAeA,EAAYE,OAAOC,WAAaZ,EAAQW,OAAOC,SAC5F,OACI,sBAAK5B,UAAU,cAAf,UACK0B,GACG,qBACI1B,UAAU,iBACVW,MAAO,CAACkB,gBAAgB,OAAD,cAASb,QAAT,IAASA,GAAT,UAASA,EAASW,cAAlB,aAAS,EAAiBG,OAA1B,SAGtB,OAAPd,QAAO,IAAPA,GAAA,UAAAA,EAAUC,mBAAV,eAAyBnB,QAAQ,EAE/B,qBACIoB,IAAKF,EAAQC,YAAY,GAAGE,KAC5BC,IAAI,qBACJpB,UAAU,gBACVW,MAAO,CAAEoB,WAAYL,EAAuB,MAAQ,UAGxD,qBAAK1B,UAAU,UAAUW,MAAO,CAACU,MAAO,OAAQC,MAAM,QAASC,gBAAgB,UAAWQ,WAAYL,EAAuB,MAAQ,QAArI,SACKV,EAAQpB,WC8CdoC,EA9DE,SAAC7C,GACd,IAAQ8C,EAAyC9C,EAAzC8C,MAAOC,EAAkC/C,EAAlC+C,WAAYC,EAAsBhD,EAAtBgD,SAAUC,EAAYjD,EAAZiD,SAE/BC,EAAOJ,GAASA,EAAMC,GAEtBI,EAAuB,SAACtB,EAASuB,GACnC,OAAOF,EAAKG,OAAOC,KAAI,SAACC,EAAQC,GAAT,aAAkBD,EAAOE,YAAc5B,EAAQN,IAClE,qBAEIV,UAAU,eACVW,MAAO,CACHU,MAAOkB,EAAc,QAAU,OAC/BV,gBAAgB,OAAD,cAASa,QAAT,IAASA,GAAT,UAASA,EAAQA,cAAjB,aAAS,EAAgBZ,OAAzB,OALvB,eACiBa,QAWnBE,EAAgB,WAGlB,OAFaC,OAAOC,KAAKX,GAEbK,KAAI,SAACO,EAAKL,GAClB,IAAM3B,EAAUoB,EAASY,GACnBC,EAA2B,IAAVN,EAAc,KAAOK,EAAIL,EAAM,GAChDJ,EAAcJ,IAAanB,EAAQW,OAAOC,SAEhD,OACI,sBAA0BjB,MAAO,CAACuC,MAAO,QAAzC,UACI,qBAAKlD,UAAU,gBAAf,SAEIuC,EACE,cAAC,EAAD,CAAWvB,QAASA,IACpB,cAAC,EAAD,CAAcA,QAASA,EAASS,YAAaT,EAAQiC,OAG3D,qBAAKjD,UAAU,gBAAgBW,MAAO,CAACwC,YAAaZ,EAAc,OAAS,MAAOR,WAAYQ,EAAc,MAAQ,QAApH,SACKD,EAAqBtB,EAASuB,OATvC,cAAiBI,QAiB7B,OAFAE,IAEIR,EAEA,sBAAKrC,UAAU,YAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,aAAf,gBAA6BqC,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMe,QACnC,qBAAKpD,UAAU,gBAAf,SACKqC,EAAKG,OAAOC,KAAI,SAACC,GAAD,gBAAeA,EAAOA,OAAOd,kBAGrDiB,IACD,qBAAKlC,MAAO,CAAC0C,OAAQ,WACrB,qBAAKrD,UAAU,yBAAf,SACI,cAAC,EAAD,2BAAiBb,GAAjB,IAAwBI,OAAU2C,UAZ7B,e,yCCNNoB,EAxCG,WACd,MAAgClE,mBAAS,IAAzC,mBAAOwC,EAAP,KAAiB2B,EAAjB,KACA,EAAgCnE,mBAAS,IAAzC,mBAAOoE,EAAP,KAAiBC,EAAjB,KACA,EAA0BrE,mBAAS,IAAnC,mBAAOsE,EAAP,KAAcC,EAAd,KAEMlE,EAAY,uCAAG,WAAOmE,GAAP,eAAAC,EAAA,6DACjBD,EAAEjE,iBAEImE,EAAa,CAAC,aAAc,uCAAwC,YAAalC,EAAU,cAAe4B,GAH/F,kBAMRO,IAAMC,IAAI,kCAAmC,CAACC,QAASH,IAN/C,OAOdI,aAAaC,QAAQ,WAAYvC,GACjCsC,aAAaC,QAAQ,WAAYX,GAEjCY,OAAOC,SAASC,SAVF,kDAYbX,EAAS,kCAZI,0DAAH,sDAgBlB,OACI,qBAAK3D,UAAU,UAAf,SACI,sBAAKA,UAAU,OAAf,UACI,oBAAIA,UAAU,QAAd,8BACA,uBAAMC,SAAUR,EAAhB,UACI,uBAAOe,KAAK,OAAOnB,MAAOuC,EAAUzB,SAAU,SAACyD,GAAD,OAAKL,EAAYK,EAAExD,OAAOf,QAAQW,UAAU,QAAQE,YAAY,WAAWqE,UAAQ,IACjI,uBAAO/D,KAAK,WAAWnB,MAAOmE,EAAUrD,SAAU,SAACyD,GAAD,OAAKH,EAAYG,EAAExD,OAAOf,QAAQW,UAAU,QAAQE,YAAY,WAAWqE,UAAQ,IACrI,qBAAKC,MAAM,SAAX,SACI,wBAAQhE,KAAK,SAASR,UAAU,SAAhC,SACI,sDAGR,oBAAIA,UAAU,QAAd,SAAuB0D,aCjB5Be,EAdH,WACR,OAAIP,aAAaQ,QAAQ,YAErB,cAAC,IAAD,CACIrB,OAAS,QACTsB,UAAY,uCACZxC,SAAY+B,aAAaQ,QAAQ,YACjCE,WAAcV,aAAaQ,QAAQ,YACnCG,eAAkB,SAACC,GAAD,OAAkB,cAAC,EAAD,eAAcA,OAPb,cAAC,EAAD,KCFjDC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.d7917534.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport {sendMessage, isTyping} from 'react-chat-engine';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('');\r\n    const {chatId, creds} = props;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const text = value.trim();\r\n\r\n        if(text.length > 0 ) sendMessage(creds, chatId, {text});\r\n        setValue('');\r\n    }\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text:'' })\r\n    }\r\n\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                className=\"message-input\"\r\n                placeholder=\"Send a message...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\"/>\r\n                </span>\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{display:'none'}}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\nexport default MessageForm;","const MyMessage = ({message}) => {\r\n    if(message ?.attachments ?. length >0 ) {\r\n        return(\r\n            <img \r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ float: 'right' }}\r\n            />\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"message\" style={{float: 'right', color:'white', backgroundColor:\"#3B2A50\"}}>\r\n            {message.text}\r\n        </div>\r\n    );\r\n}\r\nexport default MyMessage;","const TheirMessage = ({lastMessage, message}) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n    return (\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div \r\n                    className=\"message-avatar\"\r\n                    style={{backgroundImage: `url(${message?.sender?.avatar})`}}\r\n                />\r\n            )}\r\n            {(message ?.attachments ?. length >0 ) \r\n            ?(\r\n                <img \r\n                    src={message.attachments[0].file}\r\n                    alt=\"message-attachment\"\r\n                    className=\"message-image\"\r\n                    style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n                />\r\n            ):(\r\n                <div className=\"message\" style={{float: 'left', color:'black', backgroundColor:\"#CABCDC\", marginLeft: isFirstMessageByUser ? '4px' : '48px'}}>\r\n                    {message.text}\r\n                </div>\r\n            )\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default TheirMessage;","import MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n\r\nconst ChatFeed = (props) => {\r\n    const { chats, activeChat, userName, messages } =props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipints = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) =>person.last_read === message.id && (\r\n            <div\r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{\r\n                    float: isMyMessage ? 'right' : 'left',\r\n                    backgroundImage: `url(${person?.person?.avatar})`\r\n                }}\r\n            />\r\n        ))\r\n    }\r\n\r\n\r\n    const renderMessage = () => {\r\n        const keys = Object.keys(messages);\r\n        \r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessagekey = index === 0 ? null : key[index-1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return (\r\n                <div key={`mes_${index}`} style={{width: '100%'}}>\r\n                    <div className=\"message-block\">\r\n                    {\r\n                        isMyMessage\r\n                        ? <MyMessage message={message} />\r\n                        : <TheirMessage message={message} lastMessage={message[lastMessagekey]}/>\r\n                    }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px'}}>\r\n                        {renderReadReceipints(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n    renderMessage();\r\n\r\n    if(!chat) return 'Loading....';\r\n    return (\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">{chat?.title}</div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => `${person.person.username}`)}\r\n                </div>\r\n            </div>\r\n            {renderMessage()}\r\n            <div style={{height: '100px'}}/>\r\n            <div className=\"message-form-container\">\r\n                <MessageForm {...props} chatId = {activeChat}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ChatFeed;","import { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = ( ) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const authObject = {'Project-ID': \"f2ae8f4f-770c-42f1-b024-de9ffc663178\", 'User-Name': username, \"User-Secret\": password }\r\n\r\n        try{\r\n           await axios.get('https://api.chatengine.io/chats', {headers: authObject});\r\n           localStorage.setItem('username', username);\r\n           localStorage.setItem('password', password);\r\n\r\n           window.location.reload();\r\n        }catch(error){\r\n            setError('Ooops.. Incorrect credentails.');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat Application</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e)=>setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n                    <input type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                    </div>\r\n                    <h2 className=\"error\">{error}</h2>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import { ChatEngine } from \"react-chat-engine\";\r\nimport './App.css';\r\nimport ChatFeed from './components/ChatFeed';\r\nimport LoginForm from './components/LoginForm';\r\n\r\nconst App = () => {\r\n    if(!localStorage.getItem('username')) return <LoginForm/>\r\n    return(\r\n        <ChatEngine\r\n            height = \"100vh\"\r\n            projectID = \"f2ae8f4f-770c-42f1-b024-de9ffc663178\"\r\n            userName = {localStorage.getItem('username')}\r\n            userSecret = {localStorage.getItem('password')}\r\n            renderChatFeed = {(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n\r\n        />\r\n    );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from './App';\r\n\r\nReactDom.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}